{
  "version": "2.0.0",
  "tasks": [
    // Backend Build Tasks
    {
      "label": "build-backend",
      "type": "process",
      "command": "dotnet",
      "args": [
        "build",
        "${workspaceFolder}/src/backend/KGV.sln",
        "/property:GenerateFullPaths=true",
        "/consoleloggerparameters:NoSummary"
      ],
      "group": "build",
      "presentation": {
        "reveal": "silent"
      },
      "problemMatcher": "$msCompile"
    },
    {
      "label": "build-backend-tests",
      "type": "process",
      "command": "dotnet",
      "args": [
        "build",
        "${workspaceFolder}/tests/backend/KGV.Application.Tests/KGV.Application.Tests.csproj",
        "/property:GenerateFullPaths=true",
        "/consoleloggerparameters:NoSummary"
      ],
      "group": "build",
      "presentation": {
        "reveal": "silent"
      },
      "problemMatcher": "$msCompile"
    },
    {
      "label": "build-webapi-tests",
      "type": "process",
      "command": "dotnet",
      "args": [
        "build",
        "${workspaceFolder}/tests/backend/KGV.WebApi.Tests/KGV.WebApi.Tests.csproj",
        "/property:GenerateFullPaths=true",
        "/consoleloggerparameters:NoSummary"
      ],
      "group": "build",
      "presentation": {
        "reveal": "silent"
      },
      "problemMatcher": "$msCompile"
    },
    {
      "label": "clean-backend",
      "type": "process",
      "command": "dotnet",
      "args": [
        "clean",
        "${workspaceFolder}/src/backend/KGV.sln"
      ],
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "label": "restore-backend",
      "type": "process",
      "command": "dotnet",
      "args": [
        "restore",
        "${workspaceFolder}/src/backend/KGV.sln"
      ],
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    },

    // Frontend Build Tasks
    {
      "label": "build-frontend",
      "type": "shell",
      "command": "npm",
      "args": ["run", "build"],
      "options": {
        "cwd": "${workspaceFolder}/src/frontend"
      },
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": ["$tsc"]
    },
    {
      "label": "build-frontend-prod",
      "type": "shell",
      "command": "npm",
      "args": ["run", "build", "--", "--configuration=production"],
      "options": {
        "cwd": "${workspaceFolder}/src/frontend"
      },
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": ["$tsc"]
    },
    {
      "label": "install-frontend",
      "type": "shell",
      "command": "npm",
      "args": ["install"],
      "options": {
        "cwd": "${workspaceFolder}/src/frontend"
      },
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    },

    // Test Tasks
    {
      "label": "test-backend",
      "type": "process",
      "command": "dotnet",
      "args": [
        "test",
        "${workspaceFolder}/src/backend/KGV.sln",
        "--logger:trx",
        "--collect:\"XPlat Code Coverage\""
      ],
      "group": "test",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": "$msCompile"
    },
    {
      "label": "test-backend-domain",
      "type": "process",
      "command": "dotnet",
      "args": [
        "test",
        "${workspaceFolder}/src/backend/KGV.Domain.Tests/KGV.Domain.Tests.csproj",
        "--logger:trx"
      ],
      "group": "test",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": "$msCompile"
    },
    {
      "label": "test-frontend",
      "type": "shell",
      "command": "npm",
      "args": ["run", "test", "--", "--watch=false", "--browsers=ChromeHeadless"],
      "options": {
        "cwd": "${workspaceFolder}/src/frontend"
      },
      "group": "test",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "label": "test-frontend-watch",
      "type": "shell",
      "command": "npm",
      "args": ["run", "test"],
      "options": {
        "cwd": "${workspaceFolder}/src/frontend"
      },
      "group": "test",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": [],
      "isBackground": true
    },

    // Development Tasks
    {
      "label": "serve-frontend",
      "type": "shell",
      "command": "npm",
      "args": ["start"],
      "options": {
        "cwd": "${workspaceFolder}/src/frontend"
      },
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": [],
      "isBackground": true
    },
    {
      "label": "watch-backend",
      "type": "process",
      "command": "dotnet",
      "args": [
        "watch",
        "run",
        "--project",
        "${workspaceFolder}/src/backend/KGV.WebApi/KGV.WebApi.csproj"
      ],
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": "$msCompile",
      "isBackground": true
    },

    // Database Tasks
    {
      "label": "ef-migrations-add",
      "type": "process",
      "command": "dotnet",
      "args": [
        "ef",
        "migrations",
        "add",
        "${input:migrationName}",
        "--project",
        "${workspaceFolder}/src/backend/KGV.Infrastructure",
        "--startup-project",
        "${workspaceFolder}/src/backend/KGV.WebApi"
      ],
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "label": "ef-database-update",
      "type": "process",
      "command": "dotnet",
      "args": [
        "ef",
        "database",
        "update",
        "--project",
        "${workspaceFolder}/src/backend/KGV.Infrastructure",
        "--startup-project",
        "${workspaceFolder}/src/backend/KGV.WebApi"
      ],
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    },

    // Linting and Code Quality
    {
      "label": "lint-frontend",
      "type": "shell",
      "command": "npm",
      "args": ["run", "lint"],
      "options": {
        "cwd": "${workspaceFolder}/src/frontend"
      },
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": ["$eslint-stylish"]
    },
    {
      "label": "format-frontend",
      "type": "shell",
      "command": "npm",
      "args": ["run", "format"],
      "options": {
        "cwd": "${workspaceFolder}/src/frontend"
      },
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    },

    // Docker Tasks
    {
      "label": "docker-compose-up",
      "type": "shell",
      "command": "docker-compose",
      "args": ["up", "-d"],
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "label": "docker-compose-down",
      "type": "shell",
      "command": "docker-compose",
      "args": ["down"],
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    },

    // Compound Tasks
    {
      "label": "full-build",
      "dependsOn": [
        "build-backend",
        "build-frontend"
      ],
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "full-test",
      "dependsOn": [
        "test-backend",
        "test-frontend"
      ],
      "group": "test",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "setup-development",
      "dependsOn": [
        "restore-backend",
        "install-frontend",
        "docker-compose-up"
      ],
      "dependsOrder": "sequence",
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    }
  ],

  // Input Variables
  "inputs": [
    {
      "id": "migrationName",
      "type": "promptString",
      "description": "Enter migration name"
    }
  ]
}