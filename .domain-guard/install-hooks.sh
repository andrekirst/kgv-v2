#!/bin/bash
# KGV Domain Guard Installation Script
# Sets up pre-commit hooks and validation

echo "🛡️  Installing KGV Domain Guard..."

# Create git hooks directory if it doesn't exist
mkdir -p .git/hooks

# Copy pre-commit hook
cp .domain-guard/pre-commit-hook.sh .git/hooks/pre-commit
chmod +x .git/hooks/pre-commit

echo "✅ Pre-commit hook installed"

# Create domain guard configuration
if [ ! -f ".domain-guard/config.json" ]; then
    cat > .domain-guard/config.json << EOF
{
  "version": "1.0.0",
  "enabled": true,
  "strictMode": true,
  "checks": {
    "businessRules": true,
    "eventSchemas": true,
    "valueObjectImmutability": true,
    "aggregateBoundaries": true
  },
  "notifications": {
    "slack": false,
    "email": false,
    "console": true
  },
  "exceptions": {
    "files": [],
    "patterns": []
  }
}
EOF
    echo "✅ Domain guard configuration created"
fi

# Create validation report template
if [ ! -f ".domain-guard/report-template.md" ]; then
    cat > .domain-guard/report-template.md << EOF
# Domain Validation Report

**Date**: {{DATE}}
**Commit**: {{COMMIT_HASH}}
**Files Checked**: {{FILE_COUNT}}

## Summary
- ✅ **Passed**: {{PASSED_COUNT}}
- ❌ **Violations**: {{VIOLATION_COUNT}}
- ⚠️  **Warnings**: {{WARNING_COUNT}}

## Violations Found
{{VIOLATIONS}}

## Recommendations
{{RECOMMENDATIONS}}

---
*Generated by KGV Domain Guard v{{VERSION}}*
EOF
    echo "✅ Report template created"
fi

echo ""
echo "🎉 Domain Guard installation complete!"
echo ""
echo "📋 What's been installed:"
echo "   • Pre-commit hook for domain validation"
echo "   • Domain model validation rules"
echo "   • Configuration files"
echo "   • Report templates"
echo ""
echo "🛠️  Usage:"
echo "   • Hooks will run automatically on git commit"
echo "   • Manual check: .domain-guard/pre-commit-hook.sh"
echo "   • Configuration: .domain-guard/config.json"
echo ""
echo "📚 Documentation:"
echo "   • CLAUDE.md - Domain protection guidelines"
echo "   • docs/domain-model-documentation.md - Complete specifications"
echo ""